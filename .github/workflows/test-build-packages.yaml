name: Test Building Packages

on:
  pull_request:
    branches: [ main, release-* ]
    paths:
      - 'pkg/v1/tkg/**'
      - 'pkg/v1/tkr/**'
      - 'pkg/v2/tkr/**'
      - 'pkg/v1/sdk/features/**'
      - 'pkg/v1/sdk/capabilities/**'
      - 'pkg/v2/object-propagation/**'
      - 'addons/**'
      - 'packages/**'
      - '!pkg/v1/tkg/tkgpackage*/*'
      - '!pkg/v1/tkg/kappclient/*'
      - '!pkg/v1/tkg/test/tkgpackageclient/**'
      - 'pkg/v1/providers/**'
      - '.github/workflows/tkg_integration_tests*.yaml'
      - '.github/workflows/test-build-packages.yaml'

concurrency:
  group: ${{ format('test-build-packages-{0}', github.head_ref) }}
  cancel-in-progress: true

jobs:
  test-build-packages:
    name: Test Building Packages
    runs-on: ubuntu-latest
    steps:
      - name: show environment
        uses: hmarr/debug-action@v2

      - name: Extract PR Number
        uses: Dovyski/payload-info-action@master
        id: get_pr_num
        with:
          # when event is a pull request, obtaining the PR number is obvious
          filter_pull_request: '.number'
          # when event is a push (merge of PR), since we require linear history,
          # we are not even generating a merge commit that can help identify the
          # PR number, so don't even try. Instead we just hard-code to a dummy
          # value.
          filter_push: 1009

      - name: Determine registry directory
        uses: Dovyski/payload-info-action@master
        id: get_registry_dir
        with:
          # when event is a pull request, use the PR number as the registry dir
          filter_pull_request: '.number'
          # when event is a push, use branch name instead
          filter_push: '.ref | sub("^refs/heads/"; "")'

      - name: Extract registry directory
        shell: bash
        run: |
          export REGDIR=$(echo ${{ steps.get_registry_dir.outputs.value }} | tr -d '"')
          echo "##[set-output name=regdir;]$(echo $REGDIR)"
        id: extract_reg_dir


      - name: Free disk space and clean up installed plugins on runner
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /home/tanzu/.cache
          sudo rm -rf /home/tanzu/.kube
          sudo rm -rf /home/tanzu/.local/share/tanzu-cli/*

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Build Tools
        run: make tools

      - name: Build management packages
        env:
          NUM: ${{ github.run_id }}
          OCI_REGISTRY: localhost:5001/tanzu_framework/github-actions/${{ steps.extract_reg_dir.outputs.regdir }}
          COMPONENTS: "pkg/v2/tkr/controller/tkr-source pkg/v2/tkr/controller/tkr-status pkg/v1/sdk/features addons pkg/v2/tkr/webhook/infra-machine pkg/v1/sdk/capabilities pkg/v2/tkr/webhook/tkr-conversion pkg/v2/tkr/webhook/cluster/tkr-resolver addons/pinniped/tanzu-auth-controller-manager pkg/v2/object-propagation"
          BUILD_VERSION: "v0.21.0"
          IMG_VERSION_OVERRIDE: latest
        run: |
          make local-registry
          make docker-build

      - name: Publish management packages
        env:
          NUM: ${{ github.run_number }}
          OCI_REGISTRY: localhost:5001/tanzu_framework/github-actions/${{ steps.extract_reg_dir.outputs.regdir }}
          COMPONENTS: "pkg/v2/tkr/controller/tkr-source pkg/v2/tkr/controller/tkr-status pkg/v1/sdk/features addons pkg/v2/tkr/webhook/infra-machine pkg/v1/sdk/capabilities pkg/v2/tkr/webhook/tkr-conversion pkg/v2/tkr/webhook/cluster/tkr-resolver addons/pinniped/tanzu-auth-controller-manager pkg/v2/object-propagation"
          BUILD_VERSION: "v0.21.0"
          IMG_VERSION_OVERRIDE: latest
        run: |
          make docker-publish
          cp pkg/v1/tkg/test/config/packages/core-management-plugins/kbld-config_test.yaml packages/core-management-plugins/kbld-config.yaml
          make kbld-image-replace
          make package-push-bundles-repo PACKAGE_REPOSITORY=management
          make clean-registry

      - name: Cleanup
        run: rm -rf ~/.tanzu ~/.tkg ~/.config; docker kill $(docker ps -q) | true; docker system prune -a --volumes -f
