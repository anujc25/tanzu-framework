apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  labels:
    tkg.tanzu.vmware.com/cluster-name: '${ CLUSTER_NAME }'
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["${CLUSTER_CIDR}"]
    services:
      cidrBlocks: ["${SERVICE_CIDR}"]
  topology:
    class: tkg-cluster-class-dev
    version: v1.21.2
    controlPlane:
      replicas: ${CONTROL_PLANE_MACHINE_COUNT}
    workers:
      machineDeployments:
      - class: tkg-worker
        name: tkg-worker-pool
        replicas: ${WORKER_MACHINE_COUNT}
    variables:
---
# VVVV everything below would have been pre-generated prior to cluster creation
# and deployed on the management cluster
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: tkg-cluster-class-dev
  namespace: default
spec:
  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: tkg-kcp
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureMachineTemplate
        name: tkg-controlplane-azure-template
  workers:
    machineDeployments:
    - class: tkg-worker
      template:
         bootstrap:
           ref:
             apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
             kind: KubeadmConfigTemplate
             name: tkg-bootstrap-template
         infrastructure:
           ref:
             apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
             kind: AzureMachineTemplate
             name: tkg-azure-template
  infrastructure:
     ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterTemplate
        name: azure-cluster-template
  variables:
  - name: AZURE_LOCATION
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_VNET_NAME
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_VNET_CIDR
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_CONTROL_PLANE_SUBNET_NAME
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_CONTROL_PLANE_SUBNET_SECURITY_GROUP
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_CONTROL_PLANE_SUBNET_CIDR
    schema:
      openAPIV3Schema:
        type: string
        default: 10.0.0.0/24
  - name: AZURE_NODE_SUBNET_NAME
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_NODE_SUBNET_SECURITY_GROUP
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_NODE_SUBNET_CIDR
    required: true
    schema:
      openAPIV3Schema:
        type: string
        default: 10.0.1.0/24
  - name: AZURE_RESOURCE_GROUP
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_VNET_RESOURCE_GROUP
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_SUBSCRIPTION_ID
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: CLUSTER_NAME
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_IDENTITY_NAME
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_IDENTITY_NAMESPACE
    schema:
      openAPIV3Schema:
        type: string
  - name: TKG_CLUSTER_ROLE
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_ENVIRONMENT
    schema:
      openAPIV3Schema:
        type: string
        default: AzurePublicCloud
  - name: AZURE_SSH_PUBLIC_KEY_B64
    required: true
    schema:
      openAPIV3Schema:
        type: string
  - name: AZURE_CONTROL_PLANE_MACHINE_TYPE
    schema:
      openAPIV3Schema:
        type: string
        default: Standard_D2s_v3
  - name: AZURE_NODE_MACHINE_TYPE
    schema:
      openAPIV3Schema:
        type: string
        default: Standard_D2s_v3
  - name: AZURE_ENABLE_ACCELERATED_NETWORKING
    schema:
      openAPIV3Schema:
        type: boolean
        default: true
  - name: AZURE_ENABLE_NODE_DATA_DISK
    schema:
      openAPIV3Schema:
        type: boolean
        default: false
  - name: AZURE_CONTROL_PLANE_OS_DISK_STORAGE_ACCOUNT_TYPE
    schema:
      openAPIV3Schema:
        type: string
        default: Premium_LRS
  - name: AZURE_NODE_OS_DISK_STORAGE_ACCOUNT_TYPE
    schema:
      openAPIV3Schema:
        type: string
        default: Premium_LRS
  - name: AZURE_CONTROL_PLANE_OS_DISK_SIZE_GIB
    schema:
      openAPIV3Schema:
        type: integer
        default: 128
  - name: AZURE_CONTROL_PLANE_DATA_DISK_SIZE_GIB
    schema:
      openAPIV3Schema:
        type: integer
        default: 256
  - name: AZURE_NODE_OS_DISK_SIZE_GIB
    schema:
      openAPIV3Schema:
        type: integer
        default: 128
  - name: AZURE_NODE_DATA_DISK_SIZE_GIB
    schema:
      openAPIV3Schema:
        type: integer
        default: 256
  - name: AZURE_ENABLE_PRIVATE_CLUSTER
    schema:
      openAPIV3Schema:
        type: boolean
        default: false
  - name: AZURE_ENABLE_CONTROL_PLANE_OUTBOUND_LB
    schema:
      openAPIV3Schema:
        type: boolean
        default: false
  - name: AZURE_ENABLE_NODE_OUTBOUND_LB
    schema:
      openAPIV3Schema:
        type: boolean
        default: false
  - name: AZURE_FRONTEND_PRIVATE_IP
    schema:
      openAPIV3Schema:
        type: string
        default: 10.0.0.100
  - name: AZURE_CONTROL_PLANE_OUTBOUND_LB_FRONTEND_IP_COUNT
    schema:
      openAPIV3Schema:
        type: integer
        default: 1
  - name: AZURE_NODE_OUTBOUND_LB_FRONTEND_IP_COUNT
    schema:
      openAPIV3Schema:
        type: integer
        default: 1
  patches:
  - name: AzureClusterIdentityRef
    enabledIf: '{{if or .AZURE_IDENTITY_NAME (eq .TKG_CLUSTER_ROLE "management")}}true{{end}}'
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterTemplate
        matchResources:
          infrastructureCluster: true
      jsonPatches:
      - op: add
        path: "/spec/template/spec/identityRef"
        valueFrom:
          template: |
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: AzureClusterIdentity
            name: {{.builtin.cluster.name}}-identity
            namespace: tkg-system
  - name: AzureClusterIdentityName
    enabledIf: '{{if or .AZURE_IDENTITY_NAME (eq .TKG_CLUSTER_ROLE "management")}}true{{end}}'
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterTemplate
        matchResources:
          infrastructureCluster: true
      jsonPatches:
      - op: replace
        path: "/spec/template/spec/identityRef/name"
        valueFrom:
          variable: AZURE_IDENTITY_NAME
  - name: AzureClusterIdentityNamespace
    enabledIf: '{{if or .AZURE_IDENTITY_NAME (eq .TKG_CLUSTER_ROLE "management")}}true{{end}}'
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterTemplate
        matchResources:
          infrastructureCluster: true
      jsonPatches:
      - op: replace
        path: "/spec/template/spec/identityRef/namespace"
        valueFrom:
          variable: AZURE_IDENTITY_NAMESPACE
  - name: ACT_main
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterTemplate
        matchResources:
          infrastructureCluster: true
      jsonPatches:
      - op: replace
        path: "/spec/template/spec/azureEnvironment"
        valueFrom:
          variable: AZURE_ENVIRONMENT
      - op: replace
        path: "/spec/template/spec/location"
        valueFrom:
          variable: AZURE_LOCATION
      - op: replace
        path: "/spec/template/spec/networkSpec/vnet"
        valueFrom:
          template: |
            name: {{if .AZURE_VNET_NAME}}{{.AZURE_VNET_NAME}}{{else}}{{.builtin.cluster.name}}-vnet{{end}}
            resourceGroup: {{if .AZURE_VNET_RESOURCE_GROUP}}{{.AZURE_VNET_RESOURCE_GROUP}}{{else if .AZURE_RESOURCE_GROUP}}{{.AZURE_RESOURCE_GROUP}}{{else}}{{.builtin.cluster.name}}{{end}}
            cidrBlocks: [{{.AZURE_VNET_CIDR}}]
      - op: replace
        path: "/spec/template/spec/resourceGroup"
        valueFrom:
          template: |
            {{if .AZURE_RESOURCE_GROUP}}{{.AZURE_RESOURCE_GROUP}}{{else}}{{.builtin.cluster.name}}{{end}}
      - op: replace
        path: "/spec/template/spec/subscriptionID"
        valueFrom:
          variable: AZURE_SUBSCRIPTION_ID
      - op: replace
        path: "/spec/template/spec/networkSpec/subnets"
        valueFrom:
          template: |
            - name: '{{ .AZURE_CONTROL_PLANE_SUBNET_NAME }}'
              role: control-plane
              cidrBlocks: [{{ .AZURE_CONTROL_PLANE_SUBNET_CIDR }}]
              {{if .AZURE_CONTROL_PLANE_SUBNET_SECURITY_GROUP}}securityGroup: {{.AZURE_CONTROL_PLANE_SUBNET_SECURITY_GROUP}}{{end}}
            - name: '{{ .AZURE_NODE_SUBNET_NAME }}'
              role: node
              cidrBlocks: [{{ .AZURE_NODE_SUBNET_CIDR }}]
              {{if .AZURE_NODE_SUBNET_SECURITY_GROUP}}securityGroup: {{.AZURE_NODE_SUBNET_SECURITY_GROUP}}{{end}}
  - name: AMT_ControlPlane_Main
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureMachineTemplate
        matchResources:
          controlPlane: true
      jsonPatches:
      - op: replace
        path: "/spec/template/spec/sshPublicKey"
        valueFrom:
          variable: AZURE_SSH_PUBLIC_KEY_B64
      - op: replace
        path: "/spec/template/spec/vmSize"
        valueFrom:
          variable: AZURE_CONTROL_PLANE_MACHINE_TYPE
      - op: add
        path: "/spec/template/spec/acceleratedNetworking"
        valueFrom:
          variable: AZURE_ENABLE_ACCELERATED_NETWORKING
          # TODO
          #      - op: replace
          #        path: "/spec/template/spec/dataDisks/0/diskSizeGB"
          #        valueFrom:
          #          variable: AZURE_CONTROL_PLANE_DATA_DISK_SIZE_GIB
      - op: replace
        path: "/spec/template/spec/osDisk"
        valueFrom:
          template: |
            diskSizeGB: {{.AZURE_CONTROL_PLANE_OS_DISK_SIZE_GIB}}
            managedDisk:
              storageAccountType: {{.AZURE_CONTROL_PLANE_OS_DISK_STORAGE_ACCOUNT_TYPE}}
  - name: AMT_MachineDeployment_Main
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - tkg-worker
      jsonPatches:
      - op: replace
        path: "/spec/template/spec/sshPublicKey"
        valueFrom:
          variable: AZURE_SSH_PUBLIC_KEY_B64
      - op: replace
        path: "/spec/template/spec/vmSize"
        valueFrom:
          variable: AZURE_NODE_MACHINE_TYPE
      - op: add
        path: "/spec/template/spec/acceleratedNetworking"
        valueFrom:
          variable: AZURE_ENABLE_ACCELERATED_NETWORKING
      - op: replace
        path: "/spec/template/spec/osDisk"
        valueFrom:
          template: |
            diskSizeGB: {{ .AZURE_NODE_OS_DISK_SIZE_GIB }}
            managedDisk:
              storageAccountType: {{ .AZURE_NODE_OS_DISK_STORAGE_ACCOUNT_TYPE }}
  - name: EnableNodeDataDisk
    enabledIf: '{{if .AZURE_ENABLE_NODE_DATA_DISK}}true{{end}}'
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - tkg-worker
      jsonPatches:
      - op: add
        path: "/spec/template/spec/dataDisks"
        valueFrom:
          template: |
            - diskSizeGB: {{ .AZURE_NODE_DATA_DISK_SIZE_GIB }}
              lun: 0
              nameSuffix: nodedisk
  - name: ACT_EnablePrivatCluster
    enabledIf: '{{if .AZURE_ENABLE_PRIVATE_CLUSTER}}true{{end}}'
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterTemplate
        matchResources:
          infrastructureCluster: true
      jsonPatches:
      - op: add
        path: "/spec/template/spec/networkSpec/apiServerLB"
        valueFrom:
          template: |
            type: Internal
            frontendIPs:
            - name: lb-{{.builtin.cluster.name}}-ip-frontend
              privateIP: {{ .AZURE_FRONTEND_PRIVATE_IP }}
  - name: KCP_EnablePrivatCluster
    enabledIf: '{{if .AZURE_ENABLE_PRIVATE_CLUSTER}}true{{end}}'
    definitions:
    - selector:
        apiVersion: controlplane.cluster.x-k8s.io/v1beta1
        kind: KubeadmControlPlaneTemplate
        matchResources:
          controlPlane: true
      jsonPatches:
      - op: add
        path: "/spec/template/spec/kubeadmConfigSpec/preKubeadmCommands"
        valueFrom:
          template: |
            - "if [ -f /tmp/kubeadm.yaml ] || [ -f /run/kubeadm/kubeadm.yaml ]; then echo '127.0.0.1   apiserver.{{.builtin.cluster.name}}.capz.io apiserver' >> /etc/hosts; fi"
      - op: add
        path: "/spec/template/spec/kubeadmConfigSpec/postKubeadmCommands"
        valueFrom:
          template: |
            - "if [ -f /tmp/kubeadm-join-config.yaml ] || [ -f /run/kubeadm/kubeadm-join-config.yaml ]; then echo '127.0.0.1   apiserver.{{.builtin.cluster.name}}.capz.io apiserver' >> /etc/hosts; fi"
  - name: ACT_EnableControlPlaneOutboundLB
    definitions:
    - selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterTemplate
        matchResources:
          infrastructureCluster: true
      jsonPatches:
      - op: add
        path: "/spec/template/spec/networkSpec/controlPlaneOutboundLB"
        valueFrom:
          template: |
            frontendIPsCount: {{ .AZURE_CONTROL_PLANE_OUTBOUND_LB_FRONTEND_IP_COUNT }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureClusterTemplate
metadata:
  name: azure-cluster-template
  namespace: default
spec:
  template:
    spec:
      azureEnvironment: ${AZURE_ENVIRONMENT}
      location: ${AZURE_LOCATION}
      networkSpec:
        vnet:
          name: "${AZURE_VNET_NAME:=${CLUSTER_NAME}-vnet}"
          resourceGroup: ${AZURE_VNET_RESOURCE_GROUP:=${CLUSTER_NAME}}
          cidrBlock: ${AZURE_VNET_CIDR}
        subnets:
          - name: ${AZURE_CONTROL_PLANE_SUBNET_NAME}
            role: control-plane
            cidrBlock: ${AZURE_CONTROL_PLANE_SUBNET_CIDR}
          - name: ${AZURE_NODE_SUBNET_NAME}
            role: node
            cidrBlock: ${AZURE_NODE_SUBNET_CIDR}
      resourceGroup: ${AZURE_RESOURCE_GROUP:=${CLUSTER_NAME}}
      subscriptionID: ${AZURE_SUBSCRIPTION_ID}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: tkg-kcp
  namespace: default
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            extraArgs:
              cloud-config: /etc/kubernetes/azure.json
              cloud-provider: azure
            extraVolumes:
              - hostPath: /etc/kubernetes/azure.json
                mountPath: /etc/kubernetes/azure.json
                name: cloud-config
                readOnly: true
            timeoutForControlPlane: 20m
          controllerManager:
            extraArgs:
              allocate-node-cidrs: "true"
              cloud-config: /etc/kubernetes/azure.json
              cloud-provider: azure
              cluster-name: ${CLUSTER_NAME}
            extraVolumes:
              - hostPath: /etc/kubernetes/azure.json
                mountPath: /etc/kubernetes/azure.json
                name: cloud-config
                readOnly: true
          dns:
            imageRepository: registry.tkg.vmware.run
            imageTag: v1.6.5_vmware.4
          etcd:
            local:
              dataDir: /var/lib/etcddisk/etcd
              extraArgs:
                cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
                quota-backend-bytes: "8589934592"
              imageRepository: registry.tkg.vmware.run
              imageTag: v3.4.3_vmware.4
          imageRepository: registry.tkg.vmware.run
        diskSetup:
          filesystems:
          - device: /dev/disk/azure/scsi1/lun0
            extraOpts:
            - -E
            - lazy_itable_init=1,lazy_journal_init=1
            filesystem: ext4
            label: etcd_disk
          - device: ephemeral0.1
            filesystem: ext4
            label: ephemeral0
            replaceFS: ntfs
          partitions:
          - device: /dev/disk/azure/scsi1/lun0
            layout: true
            overwrite: false
            tableType: gpt
        files:
        - contentFrom:
            secret:
              key: control-plane-azure.json
              name: ${CLUSTER_NAME}-control-plane-azure-json
          owner: root:root
          path: /etc/kubernetes/azure.json
          permissions: "0644"
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              azure-container-registry-config: /etc/kubernetes/azure.json
              cloud-config: /etc/kubernetes/azure.json
              cloud-provider: azure
            name: '{{ ds.meta_data["local_hostname"] }}'
        joinConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              azure-container-registry-config: /etc/kubernetes/azure.json
              cloud-config: /etc/kubernetes/azure.json
              cloud-provider: azure
            name: '{{ ds.meta_data["local_hostname"] }}'
        mounts:
          - - LABEL=etcd_disk
            - /var/lib/etcddisk
        useExperimentalRetryJoin: true
        postKubeadmCommands: []
        preKubeadmCommands: []
      machineTemplate:
        infrastructureRef:
          apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
          kind: AzureMachineTemplate
          name: tkg-control-plane
      replicas: ${CONTROL_PLANE_MACHINE_COUNT}
      version: ${KUBERNETES_VERSION}

---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachineTemplate
metadata:
  name: tkg-controlplane-azure-template
  namespace: default
spec:
  template:
    spec:
      dataDisks:
      - diskSizeGB: 256
        lun: 0
        nameSuffix: etcddisk
      image:
         id: image_id
      osDisk:
        diskSizeGB: 128
        managedDisk:
          storageAccountType: Premium_LRS
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY_B64:=""}
      vmSize: ${AZURE_CONTROL_PLANE_MACHINE_TYPE}

#---
#apiVersion: cluster.x-k8s.io/v1beta1
#kind: MachineDeployment
#metadata:
#  name: ${CLUSTER_NAME}-md-0
#spec:
#  clusterName: ${CLUSTER_NAME}
#  replicas: ${WORKER_MACHINE_COUNT}
#  selector:
#    matchLabels: null
#  template:
#    metadata:
#      labels:
#        node-pool: "${CLUSTER_NAME}-worker-pool"
#    spec:
#      bootstrap:
#        configRef:
#          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
#          kind: KubeadmConfigTemplate
#          name: ${CLUSTER_NAME}-md-0
#      clusterName: ${CLUSTER_NAME}
#      infrastructureRef:
#        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
#        kind: AzureMachineTemplate
#        name: ${CLUSTER_NAME}-md-0
#      version: ${KUBERNETES_VERSION}
#      failureDomain: "${AZURE_NODE_AZ}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachineTemplate
metadata:
  name: tkg-azure-template
  namespace: default
spec:
  template:
    spec:
      osDisk:
        diskSizeGB: 128
        managedDisk:
          storageAccountType: Premium_LRS
        osType: Linux
      image:
         id: image_id
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY_B64:=""}
      vmSize: ${AZURE_NODE_MACHINE_TYPE}

---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: tkg-bootstrap-template
  namespace: default
spec:
  template:
    spec:
      files:
        - contentFrom:
            secret:
              key: worker-node-azure.json
              # VVVV TODO(vui)
              name: tkg-md-0-azure-json
          owner: root:root
          path: /etc/kubernetes/azure.json
          permissions: "0644"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            azure-container-registry-config: /etc/kubernetes/azure.json
            cloud-config: /etc/kubernetes/azure.json
            cloud-provider: azure
          name: '{{ ds.meta_data["local_hostname"] }}'
      useExperimentalRetryJoin: true
      preKubeadmCommands: []
