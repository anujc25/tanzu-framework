#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@ load("lib/validate.star", "validate_configuration")
#@ load("@ytt:yaml", "yaml")
#@ load("/lib/config_variable_association.star", "config_variable_association", "get_cluster_variables")
#@ validate_configuration("vsphere")

#@ if not data.values.IS_WINDOWS_WORKLOAD_CLUSTER:

#@overlay/match by=overlay.subset({"kind":"ClusterClass"})
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  namespace: #@ data.values.NAMESPACE
spec:
  controlPlane:
    ref:
      name: tkg-vsphere-kcp
    machineInfrastructure:
      ref:
        name: tkg-vsphere-control-plane
    machineHealthCheck:
      #@ if data.values.ENABLE_MHC or data.values.ENABLE_MHC_CONTROL_PLANE:
      nodeStartupTimeout: #@ data.values.NODE_STARTUP_TIMEOUT
      unhealthyConditions:
      - type: Ready
        status: Unknown
        timeout: #@ data.values.MHC_UNKNOWN_STATUS_TIMEOUT
      - type: Ready
        status: "False"
        timeout: #@ data.values.MHC_FALSE_STATUS_TIMEOUT
      #@ end
  infrastructure:
    ref:
      name: tkg-vsphere-infrastructure
      namespace: #@ data.values.NAMESPACE
  workers:
    machineDeployments:
      #@overlay/match by=overlay.index(0)
      - class: tkg-worker
        machineHealthCheck:
          #@ if data.values.ENABLE_MHC or data.values.ENABLE_MHC_WORKER_NODE:
          nodeStartupTimeout: #@ data.values.NODE_STARTUP_TIMEOUT
          unhealthyConditions:
          - type: Ready
            status: Unknown
            timeout: #@ data.values.MHC_UNKNOWN_STATUS_TIMEOUT
          - type: Ready
            status: "False"
            timeout: #@ data.values.MHC_FALSE_STATUS_TIMEOUT
          #@ end
        template:
          bootstrap:
            ref:
              name: tkg-vsphere-md-0
              namespace: #@ data.values.NAMESPACE
          infrastructure:
            ref:
              name: tkg-vsphere-worker
              namespace: #@ data.values.NAMESPACE

#@overlay/match by=overlay.subset({"kind": "Secret", "metadata":{"name": "${ CLUSTER_NAME }"}})
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.CLUSTER_NAME
stringData:
  username: #@ data.values.VSPHERE_USERNAME
  password: #@ data.values.VSPHERE_PASSWORD

#@ end
